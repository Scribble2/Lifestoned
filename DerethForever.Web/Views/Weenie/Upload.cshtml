
@{
    ViewBag.Title = "Upload GDLE Json";
}

<div class="form-horizontal" >
    <h2>
        Upload JSON File
    </h2>
    <hr />

    <p>
    Using this page you can upload <a href="#" data-toggle="tooltip" title="Intended to import/modify originally generated content from the GDLE emulator, not for use importing or modifying copyright protected content.">GDLE json files</a> of 1 object each.
    After upload, you can download it from the @Html.ActionLink("Sandbox", "Sandbox", "Weenie") page.

    At the current time, the following properties are not yet implemented and will therefore be lost
    upon export.  We recommend you restore this data into the JSON before importing into GDLE.
    <ul>
        <li>The Targeting data ("bpsd") of body parts is losing some floating point precision.</li>
        <li>Create List's "try to bond" property is flipping from "0" or "1" to "false" or "true".</li>
    </ul>

</p>
    <br/>

    <div class="well">
        @*<input type="file" name="UploadFile" id="txtUploadFile" />
        <br/>
        <input type="button" value="Upload" id="btnUpload" class="btn btn-primary" />*@
        <form id="dz" action="@Url.Action("UploadEx2", "Weenie")" class="dropzone"></form>
    </div>
</div>

@section scripts {
    <script language="javascript">
        @*$('#btnUpload').on('click', function (e) {
            var uploader = $('#txtUploadFile');
            var files = uploader[0].files;
            // console.log("files.length: " + files.length);

            if (uploader.length > 0) {
                // console.log("window.FormData: " + window.FormData);
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        // console.log("adding file " + x);
                        // console.log("file" + x + ".length: " + files[x].size);
                        data.append("file" + x, files[x]);
                    }

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("UploadEx", "Weenie")',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function(result) {
                            console.log('result: ' + result);
                            console.log('result.id: ' + result.id);

                            if (result.id > 0)
                                window.location.href = '@(Url.Action("NewImported", "Weenie"))';
                        },
                        error: function (xhr, status, p3, p4){
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });*@
        Dropzone.options.dz = {

            acceptedFiles: 'application/json',
            addRemoveLinks: true,
            parallelUploads: 5,
            init: function () {
                var $this = this;

                $this.on('addedfile', function () {
                });

                $this.on('success', function (file) {
                    $this.removeFile(file);
                });

                $this.on('queueComplete', function () {
                });
            },
            dictResponseError: "Upload Failed {{statusCode}}"
        };
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
